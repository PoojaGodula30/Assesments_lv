# -*- coding: utf-8 -*-
"""LVADSUSR152_POOJA_GODULA_LAB_3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Zg4iXywEymU7NGfHNM1ZJ3WH1-odP4eW
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

data=pd.read_csv('customer_segmentation.csv')

data.info()

data.head()

data.columns

data.describe()

data.isnull().sum()

data['Income'].fillna(data['Income'].mean,inplace=True)

data.isnull().sum()

data.duplicated().sum()

data.drop(columns=['ID','Year_Birth','Education','AcceptedCmp3','AcceptedCmp4','AcceptedCmp5','AcceptedCmp1','AcceptedCmp2'],inplace=True)

data.columns

data.dtypes

data.drop(columns=['Dt_Customer'],axis=1,inplace=True)

plt.figure(figsize=(6,5))
sns.scatterplot(x=data['NumWebPurchases'],y=data['NumDealsPurchases'])
plt.show()

plt.figure(figsize=(20,8))
for c in data.select_dtypes(include = ['number']).columns:
  sns.boxplot(data[[c]])

for i in data.select_dtypes(include=['int64','float64']).columns:
  q1=data[i].quantile(0.25)
  q3=data[i].quantile(0.75)
  iqr=q3-q1
  lo=q1-1.5*iqr
  ul=q3+1.5*iqr
  data[i]=data[i].clip(lower=lo,upper=ul)

plt.figure(figsize=(20,8))
for c in data.select_dtypes(include = ['number']).columns:
  sns.boxplot(data[[c]])

data.drop('Marital_Status',axis=1,inplace=True)

data.dtypes

data.drop(columns=['Complain','Z_Revenue','Z_CostContact','Response','Income'],axis=1,inplace=True)

d=data.corr()
d

plt.figure(figsize=(20,7))
sns.heatmap(data.corr(),annot=True,fmt='.2f')

from sklearn.cluster import KMeans

sse=[]
k_val=range(1,10)
for i in k_val:
  kmeans=KMeans(n_clusters=i,random_state=42)
  kmeans.fit(data)
  sse.append(kmeans.inertia_)

sse

plt.plot(range(1,10),sse,marker='o')
plt.title('ELBOW METHOD GRAPH')
plt.xlabel('Number of clusters(k)')
plt.ylabel('SSE')
plt.show()

kmeans=KMeans(n_clusters=5,random_state=42)
y_predict=kmeans.fit_predict(data)
data['clusters']=kmeans.labels_
data

data['clusters'].value_counts()

df1 = data[data.clusters == 0]
df2 = data[data.clusters == 1]
df3 = data[data.clusters == 2]

df1

plt.scatter(df1.NumDealsPurchases,df1['NumDealsPurchases'],color='blue')
plt.scatter(df2.NumDealsPurchases,df2['NumDealsPurchases'],color='green')
plt.scatter(df3.NumDealsPurchases,df3['NumDealsPurchases'],color='red')
plt.title('CLUSTERS FOR DEALS PURCHASED')
plt.scatter(kmeans.cluster_centers_[:,0],kmeans.cluster_centers_[:,1],color='black',label = 'Centroid',marker='o')
plt.xlabel('NumDealsPurchases')
plt.ylabel('NumWebVisitsMonth')
plt.legend()