# -*- coding: utf-8 -*-
"""LVADSUSR152_POOJA GODULA-IA2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1S50E_S--i8kYQJKjAC-E242PZq_LCNN7
"""

import numpy as np
import pandas as pd

"""1."""

arr=np.array([[12, 70, 30],
              [15, 65, 35],
              [10, 72, 40]])
min=np.min(arr)
max=np.max(arr)
mean=np.mean(arr)
sum=np.sum(arr)
std_dev=np.std(arr)
print(min)
print(max)
print(sum)
print(mean)
print(std_dev)

2

def normalise(health_data):
  sum=np.sum(health_data,axis=1)
  mean=np.mean(health_data,axis=1)
  std_dev=np.std(health_data,axis=1)
  normalise=(sum-mean)/std_dev
  return normalise
health_data = np.array([[160, 70, 30],   # height, weight, age for individual 1
                        [165, 65, 35],   # height, weight, age for individual 2
                        [170, 75, 40]])  # height, weight, age for individual 3
n=normalise(health_data)
print(n)

"""3"""

scores=np.array([[67,87,-1],[89,-1,76],[-1,89,-1]])
average=[]
for marks in scores:
  a=np.mean(marks[marks!=-1])
  average.append(a)
print(average)

"""4"""

sensor_data=np.linspace(15,25,num=24)
print(sensor_data)

"""5"""

daily_closing_prices = np.array([100, 102, 98, 105, 107, 110, 108, 112, 115, 118, 120])
window_size = 5
sum=np.sum(daily_closing_prices)
avg=sum/window_size
print(avg)

"""6"""

mean_array=np.array([0,0])
covariance_matrix=np.array([[1,0,5],[0,5,2]])
num_rows=100
normalised=sum-mean/std_dev

"""7"""

import numpy as np
properties_matrix = np.array([[1, 2, 3],
                              [4, 5, 6],
                              [7, 8, 9]])
n=np.linalg.det(properties_matrix)
print(n)

"""8"""

arr=np.arange(20)
mask=arr>5
print(arr[mask])

"""9"""

data = {'Name': ['Alice', 'Bob', 'Charlie', 'David', 'Eve', 'Frank', 'Grace'],
        'Age': [25, 30, 35, 40, 45, 50, 55],
        'City': ['New York', 'Los Angeles', 'Chicago', 'Houston', 'Phoenix', 'Miami', 'Boston'],
        'Department': ['HR', 'IT', 'Finance', 'Marketing', 'Sales', 'IT', 'HR']}
df=pd.DataFrame(data)
m=df['Age']<45
n=df['Department']!='HR'
s=df[m&n]
print(s)
columns=['Name','City']
d1=[df[columns]]

"""10"""

data = {'Department': ['Electronics', 'Electronics', 'Clothing', 'Clothing', 'Home Goods'],
        'Salesperson': ['Alice', 'Bob', 'Charlie', 'David', 'Eve'],
        'Sales': [70000, 50000, 30000, 40000, 60000]}
df=pd.DataFrame(data)
average_sales_department=df['Sales'].mean()
print(average_sales_department)

"""11"""

data = {
    'Product': ['Apples', 'Bananas', 'Cherries', 'Dates', 'Elderberries', 'Flour', 'Grapes'],
    'Category': ['Fruit', 'Fruit', 'Fruit', 'Fruit', 'Fruit', 'Bakery', 'Fruit'],
    'Price': [1.20, 0.50, 3.00, 2.50, 4.00, 1.50, 2.00],
    'Promotion': [True, False, True, True, False, True, False]
}
df=pd.DataFrame(data)
d=df['Price']
m=np.mean(d)
s=df[(d>m)& df['Promotion']==False]
print(s)
#> (df['Category'].np.sum(df['Price']))

"""12"""

employee_data = {
    'Employee': ['Alice', 'Bob', 'Charlie', 'David'],
    'Department': ['HR', 'IT', 'Finance', 'IT'],
    'Manager': ['John', 'Rachel', 'Emily', 'Rachel']
}

# Dataset of employee project assignments
project_data = {
    'Employee': ['Alice', 'Charlie', 'Eve'],
    'Project': ['P1', 'P3', 'P2']
}
d1=pd.DataFrame(employee_data)
d2=pd.DataFrame(project_data)
d=pd.merge(left=d1,right=d2,on='Employee',how='left')
d

"""13 NA

14 NA

15 NA
"""