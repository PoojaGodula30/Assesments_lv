# -*- coding: utf-8 -*-
"""LVADSUSR152_POOJA GODULA_IA-1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ySMcri3LhGVhTDKtw5MhYkpOpSCjfihX

1.Commercial Property Management System
"""

length=float(input("Enter the length of the property(in meters): "))
width=float(input("Enter the width of the property (in meters: )"))
area=length*width
if area>10000:
  print(f'area of the property(in sqms) is large : {area}')
elif area>5000 and area<10000:
  print(f'area of the property(in sqms) is medium : {area}')
else:
  print(f'area of the property(in sqms) is small : {area}')

"""Integrated health management system"""

weight=float(input("Enter the weight(in kgs): "))
height=int(input("Enter the height(in cms): "))
BMI=weight/(height*height)
if BMI==1:
  print(f'you are fit and maintain this diet {BMI}')
elif BMI>0.5 and BMI<1:
  print(f'Take care of your diet and do yoga {BMI}')
else:
  print(f'Consult the nutrionist and start taking proteins and healthy fats {BMI}')

"""Educational Recording System"""

def retrieve(student_records):
  for name,grades in student_records.items():
    for subject,grade in grades.items():
      return (f'{name}:{subject}:{grades[subject]}')


def add(student_records):
  new_student="Alice"
  grades={}
  for i,j in student_records.items():
    student_records[name]=grades
    for subject,grades in j.items():

def del(student_records):
  for i,j in student_records.items():
    del i
    for name,grades in student_records.items():
      for subject,grade in grades.items():
        return (f'{name}:{subject}:{grades[subject]}')


student_records={
    'Karan':{'Maths':89,'English':90,'Science':83},
    'Arjun':{'Maths':83,'English':78,'Science':73},
    'Bob':{'Maths':65,'English':70,'Science':83}
}

"""Content Recommendation Engine"""

age=int(input("enter the age of the user: "))
Rating=input("enter the rating of the movie: ")
if age>40 and (Rating=="U/A" or Rating=="A"):
  print(f'Movie is recommended to senior citizens ')
elif (age>=18 and age<40) and (Rating=="U/A" or Rating=="A"):
  print(f'Movie is recommended to Adults ')
elif (age>13 and age<18)and (Rating=="U/A" or Rating=="A"):
  print(f'Movie is recommended to teen with a parent ')
else:
  print(f'Movie is recommended to children and is allowed with a parent')

"""Promotional Email Dispatcher"""

subscriberIDs=[101,102,103,104,105,106,107,108]
even_numbered_subscribers=[]
for i in subscriberIDs:
  if(i%2==0):
    even_numbered_subscribers.append(i)
print(f'even numbered subscribers for product launch: {even_numbered_subscribers}')

"""Corporate Network Security System"""

user=input("enter the username: ")
password=input("enter the password")
correct_password="1234abcd"
if password==correct_password:
  print(f' user {user} can access financial documents:')
else:
  print(f'Wrong password Try again')
  12

"""customer feed back analysis"""

def avg(scores):
  n=len(l)
  s=0
  for i in scores:
    s+=i
  avg=s/n
  return avg
scores=[1,2,3,4,678,1234]
a=avg(l)
print(f'average of scores:{a}')

"""Content Moderation System"""

s=input("enter the string")
c=0
for i in s:
  if(i=='a' or i=='e' or i=='i' or i=='o' or i=='u' or
     i=='A' or i=='E' or i=='I' or i=='O' or i=='U'):
    c+=1


print(f'number of vowels in the string: {c}')

"""Automated Event reminder"""

import datetime as dt
d=dt.datetime.now()
print(d)

"""LAB 4
Robust Financial Calculator
"""

loan_amount=float(input("enter the loan amount"))
interest=float(input("enter the interest for loan"))
account_number=123
acc=int(input("enter the account number: "))
try:
  if acc==123:
    loan_paid = loan_amount*interest
    print(f"loan Paid {loan_paid}")
except:
  print("Account is not present")

"""Online Polling System"""

n=int(input("Number of people polling in this online app: "))
l=[]
for i in range(n):
  l.append(i)
print(f"Entered data is in correct format {l}")

"""Scientific Data Processing Tool"""

a=float(input("enter the value: "))
b=float(input("enter the value: "))
try:
  c=a/b
except:
  ZeroDivisionError
  print("zerodivisionerror")

"""LAB 5:
Automated Reporting System
"""

with open("report.txt","w") as f:
  f.write('server uptime today\n')
  f.write('Server uptime yesterday\n')

with open("report.txt","r") as n:
  d=n.read()
  print(d)

"""Corporate Compilance Review"""

try:
  with open("sample.txt","r") as f:
    d=f.read()
    print(d)
except:
  FileNotFoundError

"""Dynamic Content Creation Engine"""

with open("report.txt","a") as f:
  f.write("Company got a new project\n")
  f.write("Stock performance of company is good\n")
  f.write("IT industry is improving\n")

with open("report.txt",'r') as n:
  d=n.read()
  print(d)